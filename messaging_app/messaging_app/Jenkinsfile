#!/usr/bin/env groovy

pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "enamyaovi498/alx_projects:messaging_app"
    }

    stages {
        stage('Install dependencies') {
            steps {
                echo 'Installing dependencies...'
                dir('messaging_app') {
                    sh 'pip install -r messaging_app/requirements.txt'
                }
            }
        }

        stage('Run Tests') {
            steps {
                echo 'Running Django unit tests...'
                dir('messaging_app') {

                    // Run Django tests with XML output
                    sh '''
                        mkdir -p test-reports
                        python3 manage.py test \
                        --testrunner xmlrunner.extra.djangotestrunner.XMLTestRunner \
                        --noinput \
                        --settings=messaging_app.settings \
                        --output-directory test-reports
                    '''
                }
                // Publish test results in Jenkins
                junit 'messaging_app/test-reports/*.xml'
            }
        }

        stage('Build & Push Docker Image') {
            when {
                git branch 'main'
            }
            steps {
                echo "Building & Pushing Docker Image: ${DOCKER_IMAGE}"
                script {
                    def app = docker.build("${DOCKER_IMAGE}", "messaging_app")
                    docker.withRegistry('https://index.docker.io/v1/', 'enamyaovi-credentialsId') {
                        app.push()
                    }
                }
            }
        }
    }

    post {
        failure {
            mail to: 'cephastay.137@gmail.com',
                subject: 'The Pipeline failed :(',
                body: "Build ${env.BUILD_NUMBER} failed. Check Jenkins logs."
        }
    }
}
